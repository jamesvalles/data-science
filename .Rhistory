install.packages("cluster")
install.packages("NbClust")
install.packages("factoextra")
install.packages("fpc")
install.packages("dbscan")
library(cluster)
library(NbClust)
library(factoextra)
library(fpc)
library(dplyr)
library(dbscan)
set.seed(123)
dating <- read.csv("/Users/jamesvalles/Desktop/dshmk3/speed_dating_sample.csv ", header=T, sep=',')
dating <- read.csv("/Users/jamesvalles/Desktop/dshmk3/speed_dating_sample.csv", header=T, sep=',')
View(dating)
df <- read.csv("/Users/jamesvalles/Desktop/dshmk3/speed_dating_sample.csv", header=T, sep=',')
row.names(df) < df$iid
df <- select(df, -c(iid))
str(df)
df2 = data.frame(scale(df))
#Determine optimal value of K.
nc <- NbClust(df2, min.nc=3, max.nc=6, method="kmeans")
#2. Create K-means model using optimal K and visualize results
km_3 <- kmeans(df2, 3, nstart=25)
#Create cluster visulization using fviz_cluster
fviz_cluster(km_3, data = df2, repel = TRUE, show.clust.cent = FALSE)
View(df2)
View(df2)
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df2[[i]] ~ km_3$cluster, xlab="cluster", main=names(df2)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
for (i in 18:22){
boxplot(df2[[i]] ~ km$cluster, xlab="cluster", main=names(df2)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
pam_3 <- pam(df2, 3, FALSE, "euclidean")
#use fviz_cluster to visualize the results of the clustering
fviz_cluster(pam_3, data = df2, repel = TRUE, show.clust.cent = FALSE)
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df2[[i]] ~ pam_3$cluster, xlab="cluster", main=names(df2)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df2[[i]] ~ pam_3$cluster, xlab="cluster", main=names(df2)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
hc <- hclust(dist(df2), method="complete")
#Use cutree to split tree into k = 3.
hc$cluster <- cutree(hc, k = 3)
#Use fviz_cluster to plot results
fviz_cluster(list(data = df2, cluster = hc$cluster))
hc_stats <- cluster.stats(dist(df),  hc$cluster, silhouette = TRUE)
hc_stats$avg.silwidth
#calcuate average silhouette metric across k-means.
km3_stats <- cluster.stats(dist(df),  km_3$cluster, silhouette = TRUE)
km3_stats$avg.silwidth
#calcuate average silhouette metric across k-medoids.
pam3_stats <- cluster.stats(dist(df),  pam_3$cluster, silhouette = TRUE)
pam3_stats$avg.silwidth
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ km_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
hc_stats <- cluster.stats(dist(df2),  hc$cluster, silhouette = TRUE)
hc_stats$avg.silwidth
#calcuate average silhouette metric across k-medoids.
pam3_stats <- cluster.stats(dist(df2),  pam_3$cluster, silhouette = TRUE)
pam3_stats$avg.silwidth
#calcuate average silhouette metric across k-means.
km3_stats <- cluster.stats(dist(df2),  km_3$cluster, silhouette = TRUE)
km3_stats$avg.silwidth
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ km_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ km_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
#2. Generate boxplots for attr_date, since_date, intel_date, amb_date, shared_date
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ pam_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
#2. Generate boxplots for attr_date, since_date, intel_date, amb_date, shared_date
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ pam_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ pam_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ km_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
par(mfrow-c(1,5))
for (i in 18:22){
boxplot(df[[i]] ~ pam_3$cluster, xlab="cluster", main=names(df)[i])
}
par(mfrow=c(1,1)) # Reset to default plot settings
